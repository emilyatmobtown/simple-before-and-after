{
  "{\"sourceRoot\":\"/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after\",\"filename\":\"/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after",
      "filename": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.clean = exports.copy = exports.watchForChanges = exports.images = exports.styles = exports.scripts = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Provides flags to separate dev and prod builds */\n\n/* Maps original source files for debugging */\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n/* Defines production flag */\n\n/* Build the scripts */\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)(['src/js/frontend/simple-before-and-after.js', 'src/js/admin/sba-media.js']).pipe((0, _vinylNamed[\"default\"])()).pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env']\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: '[name].js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n};\n/* Build the styles */\n\n\nexports.scripts = scripts;\n\nvar styles = function styles() {\n  return (0, _gulp.src)('src/scss/simple-before-and-after.scss').pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([_autoprefixer[\"default\"]]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n};\n/* Process images */\n\n\nexports.styles = styles;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/img/**/*.{jpg,jpeg,png,svg,gif}').pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe((0, _gulp.dest)('dist/img'));\n};\n/* Watch for changes */\n\n\nexports.images = images;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', styles);\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', images);\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], copy);\n};\n/* Copy files */\n\n\nexports.watchForChanges = watchForChanges;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n};\n/* Delete files */\n\n\nexports.copy = copy;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n/* Build dev */\n\n\nexports.clean = clean;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy), watchForChanges);\n/* Build prod */\n\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy));\n/* Define default */\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwic2NyaXB0cyIsInBpcGUiLCJtb2R1bGUiLCJydWxlcyIsInRlc3QiLCJ1c2UiLCJsb2FkZXIiLCJvcHRpb25zIiwicHJlc2V0cyIsIm1vZGUiLCJkZXZ0b29sIiwib3V0cHV0IiwiZmlsZW5hbWUiLCJzdHlsZXMiLCJzb3VyY2VtYXBzIiwiaW5pdCIsIm9uIiwic2FzcyIsImxvZ0Vycm9yIiwiYXV0b3ByZWZpeGVyIiwiY29tcGF0aWJpbGl0eSIsIndyaXRlIiwiaW1hZ2VzIiwid2F0Y2hGb3JDaGFuZ2VzIiwiY29weSIsImNsZWFuIiwiZGV2IiwiYnVpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVYyQjs7QUFLZTtBQU8xQyxJQUFNQSxVQUFVLEdBQUdDLGtCQUFNQyxJQUFOLENBQVdDLElBQTlCO0FBQW9DOztBQUVwQzs7QUFDTyxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxHQUFNO0FBQ3pCLFNBQU8sZUFBSyxDQUFDLDRDQUFELEVBQStDLDJCQUEvQyxDQUFMLEVBQ05DLElBRE0sQ0FFTCw2QkFGSyxFQUlOQSxJQUpNLENBS0gsK0JBQVM7QUFDVEMsSUFBQUEsTUFBTSxFQUFFO0FBQ0pDLE1BQUFBLEtBQUssRUFBRSxDQUFDO0FBQ0pDLFFBQUFBLElBQUksRUFBRSxPQURGO0FBRUpDLFFBQUFBLEdBQUcsRUFBRTtBQUNEQyxVQUFBQSxNQUFNLEVBQUUsY0FEUDtBQUVEQyxVQUFBQSxPQUFPLEVBQUU7QUFDTEMsWUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFESjtBQUZSO0FBRkQsT0FBRDtBQURILEtBREM7QUFZVEMsSUFBQUEsSUFBSSxFQUFFYixVQUFVLEdBQUcsWUFBSCxHQUFrQixhQVp6QjtBQWFUYyxJQUFBQSxPQUFPLEVBQUUsQ0FBQ2QsVUFBRCxHQUFjLG1CQUFkLEdBQW9DLEtBYnBDO0FBY1RlLElBQUFBLE1BQU0sRUFBRTtBQUNKQyxNQUFBQSxRQUFRLEVBQUU7QUFETjtBQWRDLEdBQVQsQ0FMRyxFQXVCTlgsSUF2Qk0sQ0F3QkgsZ0JBQU0sU0FBTixDQXhCRyxDQUFQO0FBMEJILENBM0JNO0FBNEJQOzs7OztBQUNPLElBQU1ZLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQU07QUFDeEIsU0FBTyxlQUFLLHVDQUFMLEVBQ05aLElBRE0sQ0FFSCx3QkFBUSxDQUFDTCxVQUFULEVBQXFCa0IsMkJBQVdDLElBQVgsRUFBckIsQ0FGRyxFQUlOZCxJQUpNLENBS0gsNEJBQU9lLEVBQVAsQ0FBVyxPQUFYLEVBQW9CQyxxQkFBS0MsUUFBekIsQ0FMRyxFQU9OakIsSUFQTSxDQVFILHdCQUFRTCxVQUFSLEVBQW9CLDZCQUFTLENBQUV1Qix3QkFBRixDQUFULENBQXBCLENBUkcsRUFVTmxCLElBVk0sQ0FXSCx3QkFBUUwsVUFBUixFQUFvQiw4QkFBVTtBQUFFd0IsSUFBQUEsYUFBYSxFQUFFO0FBQWpCLEdBQVYsQ0FBcEIsQ0FYRyxFQWFObkIsSUFiTSxDQWNILHdCQUFRLENBQUNMLFVBQVQsRUFBcUJrQiwyQkFBV08sS0FBWCxFQUFyQixDQWRHLEVBZ0JOcEIsSUFoQk0sQ0FpQkgsZ0JBQU0sVUFBTixDQWpCRyxDQUFQO0FBbUJILENBcEJNO0FBc0JQOzs7OztBQUNPLElBQU1xQixNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQ3hCLFNBQU8sZUFBSyxxQ0FBTCxFQUNOckIsSUFETSxDQUVILHdCQUFRTCxVQUFSLEVBQW9CLCtCQUFwQixDQUZHLEVBSU5LLElBSk0sQ0FLSCxnQkFBSyxVQUFMLENBTEcsQ0FBUDtBQU9ILENBUk07QUFVUDs7Ozs7QUFDTyxJQUFNc0IsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixHQUFNO0FBQy9CLG1CQUFPLG9CQUFQLEVBQTZCVixNQUE3QjtBQUNBLG1CQUFPLHdDQUFQLEVBQWlEUyxNQUFqRDtBQUNBLG1CQUFPLENBQUMsVUFBRCxFQUFZLHVCQUFaLEVBQW9DLDRCQUFwQyxDQUFQLEVBQTBFRSxJQUExRTtBQUNMLENBSk07QUFNUDs7Ozs7QUFDTyxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBTyxHQUFNO0FBQ3RCLFNBQU8sZUFBSyxDQUFDLFVBQUQsRUFBWSx1QkFBWixFQUFvQyw0QkFBcEMsQ0FBTCxFQUNOdkIsSUFETSxDQUVILGdCQUFLLE1BQUwsQ0FGRyxDQUFQO0FBSUgsQ0FMTTtBQU9QOzs7OztBQUNPLElBQU13QixLQUFLLEdBQUcsU0FBUkEsS0FBUTtBQUFBLFNBQU0scUJBQUksQ0FBQyxNQUFELENBQUosQ0FBTjtBQUFBLENBQWQ7QUFFUDs7OztBQUNPLElBQU1DLEdBQUcsR0FBRyxrQkFBUUQsS0FBUixFQUFlLG9CQUFVWixNQUFWLEVBQWtCUyxNQUFsQixFQUEwQkUsSUFBMUIsQ0FBZixFQUFpREQsZUFBakQsQ0FBWjtBQUVQOzs7QUFDTyxJQUFNSSxLQUFLLEdBQUcsa0JBQVFGLEtBQVIsRUFBZSxvQkFBVVosTUFBVixFQUFrQlMsTUFBbEIsRUFBMEJFLElBQTFCLENBQWYsQ0FBZDtBQUVQOzs7ZUFDZUUsRyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZW1pbHlsZWZmbGVyc2NodWxtYW4vTGlicmFyeS9Nb2JpbGUgRG9jdW1lbnRzL2NvbX5hcHBsZX5DbG91ZERvY3MvX2NvZGUvd3AtbG9jYWwtZG9ja2VyLXNpdGVzL2ZyYW1lbWVuZGVyLXRlc3Qvd29yZHByZXNzL3dwLWNvbnRlbnQvcGx1Z2lucy9zaW1wbGUtYmVmb3JlLWFuZC1hZnRlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNyYywgZGVzdCwgd2F0Y2gsIHNlcmllcywgcGFyYWxsZWwgfSBmcm9tICdndWxwJztcbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7IC8qIFByb3ZpZGVzIGZsYWdzIHRvIHNlcGFyYXRlIGRldiBhbmQgcHJvZCBidWlsZHMgKi9cbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XG5pbXBvcnQgY2xlYW5Dc3MgZnJvbSAnZ3VscC1jbGVhbi1jc3MnO1xuaW1wb3J0IGd1bHBpZiBmcm9tICdndWxwLWlmJztcbmltcG9ydCBwb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XG5pbXBvcnQgc291cmNlbWFwcyBmcm9tICdndWxwLXNvdXJjZW1hcHMnOyAvKiBNYXBzIG9yaWdpbmFsIHNvdXJjZSBmaWxlcyBmb3IgZGVidWdnaW5nICovXG5pbXBvcnQgYXV0b3ByZWZpeGVyIGZyb20gJ2F1dG9wcmVmaXhlcic7XG5pbXBvcnQgaW1hZ2VtaW4gZnJvbSAnZ3VscC1pbWFnZW1pbic7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5pbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrLXN0cmVhbSc7XG5pbXBvcnQgbmFtZWQgZnJvbSAndmlueWwtbmFtZWQnO1xuXG5jb25zdCBQUk9EVUNUSU9OID0geWFyZ3MuYXJndi5wcm9kOyAvKiBEZWZpbmVzIHByb2R1Y3Rpb24gZmxhZyAqL1xuXG4vKiBCdWlsZCB0aGUgc2NyaXB0cyAqL1xuZXhwb3J0IGNvbnN0IHNjcmlwdHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHNyYyggWydzcmMvanMvZnJvbnRlbmQvc2ltcGxlLWJlZm9yZS1hbmQtYWZ0ZXIuanMnLCAnc3JjL2pzL2FkbWluL3NiYS1tZWRpYS5qcyddIClcbiAgICAucGlwZShcbiAgICAgIG5hbWVkKClcbiAgICApXG4gICAgLnBpcGUoXG4gICAgICAgIHdlYnBhY2soIHtcbiAgICAgICAgbW9kdWxlOiB7XG4gICAgICAgICAgICBydWxlczogW3tcbiAgICAgICAgICAgICAgICB0ZXN0OiAvXFwuanMkLyxcbiAgICAgICAgICAgICAgICB1c2U6IHtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGVyOiAnYmFiZWwtbG9hZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2V0czogWydAYmFiZWwvcHJlc2V0LWVudiddXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICBtb2RlOiBQUk9EVUNUSU9OID8gJ3Byb2R1Y3Rpb24nIDogJ2RldmVsb3BtZW50JyxcbiAgICAgICAgZGV2dG9vbDogIVBST0RVQ1RJT04gPyAnaW5saW5lLXNvdXJjZS1tYXAnIDogZmFsc2UsXG4gICAgICAgIG91dHB1dDoge1xuICAgICAgICAgICAgZmlsZW5hbWU6ICdbbmFtZV0uanMnXG4gICAgICAgIH0sXG4gICAgfSkpXG4gICAgLnBpcGUoXG4gICAgICAgIGRlc3QoICdkaXN0L2pzJyApXG4gICAgKTtcbn1cbi8qIEJ1aWxkIHRoZSBzdHlsZXMgKi9cbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHNyYyggJ3NyYy9zY3NzL3NpbXBsZS1iZWZvcmUtYW5kLWFmdGVyLnNjc3MnIClcbiAgICAucGlwZShcbiAgICAgICAgZ3VscGlmKCAhUFJPRFVDVElPTiwgc291cmNlbWFwcy5pbml0KCkgKVxuICAgIClcbiAgICAucGlwZShcbiAgICAgICAgc2FzcygpLm9uKCAnZXJyb3InLCBzYXNzLmxvZ0Vycm9yIClcbiAgICApXG4gICAgLnBpcGUoXG4gICAgICAgIGd1bHBpZiggUFJPRFVDVElPTiwgcG9zdGNzcyggWyBhdXRvcHJlZml4ZXIgXSApIClcbiAgICApXG4gICAgLnBpcGUoXG4gICAgICAgIGd1bHBpZiggUFJPRFVDVElPTiwgY2xlYW5Dc3MoIHsgY29tcGF0aWJpbGl0eTogJ2llOCcgfSApIClcbiAgICApXG4gICAgLnBpcGUoXG4gICAgICAgIGd1bHBpZiggIVBST0RVQ1RJT04sIHNvdXJjZW1hcHMud3JpdGUoKSApXG4gICAgKVxuICAgIC5waXBlKFxuICAgICAgICBkZXN0KCAnZGlzdC9jc3MnIClcbiAgICApO1xufVxuXG4vKiBQcm9jZXNzIGltYWdlcyAqL1xuZXhwb3J0IGNvbnN0IGltYWdlcyA9ICgpID0+IHtcbiAgICByZXR1cm4gc3JjKCAnc3JjL2ltZy8qKi8qLntqcGcsanBlZyxwbmcsc3ZnLGdpZn0nIClcbiAgICAucGlwZShcbiAgICAgICAgZ3VscGlmKCBQUk9EVUNUSU9OLCBpbWFnZW1pbigpIClcbiAgICApXG4gICAgLnBpcGUoXG4gICAgICAgIGRlc3QoJ2Rpc3QvaW1nJylcbiAgICApO1xufVxuXG4vKiBXYXRjaCBmb3IgY2hhbmdlcyAqL1xuZXhwb3J0IGNvbnN0IHdhdGNoRm9yQ2hhbmdlcyA9ICgpID0+IHtcbiAgICAgIHdhdGNoKCAnc3JjL3Njc3MvKiovKi5zY3NzJywgc3R5bGVzKSA7XG4gICAgICB3YXRjaCggJ3NyYy9pbWFnZXMvKiovKi57anBnLGpwZWcscG5nLHN2ZyxnaWZ9JywgaW1hZ2VzICk7XG4gICAgICB3YXRjaCggWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzY3NzfScsJyFzcmMve2ltYWdlcyxqcyxzY3NzfS8qKi8qJ10sIGNvcHkgKTtcbn1cblxuLyogQ29weSBmaWxlcyAqL1xuZXhwb3J0IGNvbnN0IGNvcHkgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHNyYyggWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzY3NzfScsJyFzcmMve2ltYWdlcyxqcyxzY3NzfS8qKi8qJ10gKVxuICAgIC5waXBlKFxuICAgICAgICBkZXN0KCdkaXN0JylcbiAgICApO1xufVxuXG4vKiBEZWxldGUgZmlsZXMgKi9cbmV4cG9ydCBjb25zdCBjbGVhbiA9ICgpID0+IGRlbChbJ2Rpc3QnXSk7XG5cbi8qIEJ1aWxkIGRldiAqL1xuZXhwb3J0IGNvbnN0IGRldiA9IHNlcmllcyggY2xlYW4sIHBhcmFsbGVsKCBzdHlsZXMsIGltYWdlcywgY29weSApLCB3YXRjaEZvckNoYW5nZXMgKVxuXG4vKiBCdWlsZCBwcm9kICovXG5leHBvcnQgY29uc3QgYnVpbGQgPSBzZXJpZXMoIGNsZWFuLCBwYXJhbGxlbCggc3R5bGVzLCBpbWFnZXMsIGNvcHkgKSApXG5cbi8qIERlZmluZSBkZWZhdWx0ICovXG5leHBvcnQgZGVmYXVsdCBkZXY7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "scripts",
        "pipe",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "styles",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "autoprefixer",
        "compatibility",
        "write",
        "images",
        "watchForChanges",
        "copy",
        "clean",
        "dev",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAV2B;;AAKe;AAO1C,IAAMA,UAAU,GAAGC,kBAAMC,IAAN,CAAWC,IAA9B;AAAoC;;AAEpC;;AACO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO,eAAK,CAAC,4CAAD,EAA+C,2BAA/C,CAAL,EACNC,IADM,CAEL,6BAFK,EAINA,IAJM,CAKH,+BAAS;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,IAAI,EAAE,OADF;AAEJC,QAAAA,GAAG,EAAE;AACDC,UAAAA,MAAM,EAAE,cADP;AAEDC,UAAAA,OAAO,EAAE;AACLC,YAAAA,OAAO,EAAE,CAAC,mBAAD;AADJ;AAFR;AAFD,OAAD;AADH,KADC;AAYTC,IAAAA,IAAI,EAAEb,UAAU,GAAG,YAAH,GAAkB,aAZzB;AAaTc,IAAAA,OAAO,EAAE,CAACd,UAAD,GAAc,mBAAd,GAAoC,KAbpC;AAcTe,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AAdC,GAAT,CALG,EAuBNX,IAvBM,CAwBH,gBAAM,SAAN,CAxBG,CAAP;AA0BH,CA3BM;AA4BP;;;;;AACO,IAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,SAAO,eAAK,uCAAL,EACNZ,IADM,CAEH,wBAAQ,CAACL,UAAT,EAAqBkB,2BAAWC,IAAX,EAArB,CAFG,EAINd,IAJM,CAKH,4BAAOe,EAAP,CAAW,OAAX,EAAoBC,qBAAKC,QAAzB,CALG,EAONjB,IAPM,CAQH,wBAAQL,UAAR,EAAoB,6BAAS,CAAEuB,wBAAF,CAAT,CAApB,CARG,EAUNlB,IAVM,CAWH,wBAAQL,UAAR,EAAoB,8BAAU;AAAEwB,IAAAA,aAAa,EAAE;AAAjB,GAAV,CAApB,CAXG,EAaNnB,IAbM,CAcH,wBAAQ,CAACL,UAAT,EAAqBkB,2BAAWO,KAAX,EAArB,CAdG,EAgBNpB,IAhBM,CAiBH,gBAAM,UAAN,CAjBG,CAAP;AAmBH,CApBM;AAsBP;;;;;AACO,IAAMqB,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,SAAO,eAAK,qCAAL,EACNrB,IADM,CAEH,wBAAQL,UAAR,EAAoB,+BAApB,CAFG,EAINK,IAJM,CAKH,gBAAK,UAAL,CALG,CAAP;AAOH,CARM;AAUP;;;;;AACO,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC/B,mBAAO,oBAAP,EAA6BV,MAA7B;AACA,mBAAO,wCAAP,EAAiDS,MAAjD;AACA,mBAAO,CAAC,UAAD,EAAY,uBAAZ,EAAoC,4BAApC,CAAP,EAA0EE,IAA1E;AACL,CAJM;AAMP;;;;;AACO,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AACtB,SAAO,eAAK,CAAC,UAAD,EAAY,uBAAZ,EAAoC,4BAApC,CAAL,EACNvB,IADM,CAEH,gBAAK,MAAL,CAFG,CAAP;AAIH,CALM;AAOP;;;;;AACO,IAAMwB,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,MAAD,CAAJ,CAAN;AAAA,CAAd;AAEP;;;;AACO,IAAMC,GAAG,GAAG,kBAAQD,KAAR,EAAe,oBAAUZ,MAAV,EAAkBS,MAAlB,EAA0BE,IAA1B,CAAf,EAAiDD,eAAjD,CAAZ;AAEP;;;AACO,IAAMI,KAAK,GAAG,kBAAQF,KAAR,EAAe,oBAAUZ,MAAV,EAAkBS,MAAlB,EAA0BE,IAA1B,CAAf,CAAd;AAEP;;;eACeE,G",
      "sourceRoot": "/Users/emilylefflerschulman/Library/Mobile Documents/com~apple~CloudDocs/_code/wp-local-docker-sites/framemender-test/wordpress/wp-content/plugins/simple-before-and-after",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\nimport yargs from 'yargs'; /* Provides flags to separate dev and prod builds */\nimport sass from 'gulp-sass';\nimport cleanCss from 'gulp-clean-css';\nimport gulpif from 'gulp-if';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps'; /* Maps original source files for debugging */\nimport autoprefixer from 'autoprefixer';\nimport imagemin from 'gulp-imagemin';\nimport del from 'del';\nimport webpack from 'webpack-stream';\nimport named from 'vinyl-named';\n\nconst PRODUCTION = yargs.argv.prod; /* Defines production flag */\n\n/* Build the scripts */\nexport const scripts = () => {\n    return src( ['src/js/frontend/simple-before-and-after.js', 'src/js/admin/sba-media.js'] )\n    .pipe(\n      named()\n    )\n    .pipe(\n        webpack( {\n        module: {\n            rules: [{\n                test: /\\.js$/,\n                use: {\n                    loader: 'babel-loader',\n                    options: {\n                        presets: ['@babel/preset-env']\n                    }\n                }\n            }]\n        },\n        mode: PRODUCTION ? 'production' : 'development',\n        devtool: !PRODUCTION ? 'inline-source-map' : false,\n        output: {\n            filename: '[name].js'\n        },\n    }))\n    .pipe(\n        dest( 'dist/js' )\n    );\n}\n/* Build the styles */\nexport const styles = () => {\n    return src( 'src/scss/simple-before-and-after.scss' )\n    .pipe(\n        gulpif( !PRODUCTION, sourcemaps.init() )\n    )\n    .pipe(\n        sass().on( 'error', sass.logError )\n    )\n    .pipe(\n        gulpif( PRODUCTION, postcss( [ autoprefixer ] ) )\n    )\n    .pipe(\n        gulpif( PRODUCTION, cleanCss( { compatibility: 'ie8' } ) )\n    )\n    .pipe(\n        gulpif( !PRODUCTION, sourcemaps.write() )\n    )\n    .pipe(\n        dest( 'dist/css' )\n    );\n}\n\n/* Process images */\nexport const images = () => {\n    return src( 'src/img/**/*.{jpg,jpeg,png,svg,gif}' )\n    .pipe(\n        gulpif( PRODUCTION, imagemin() )\n    )\n    .pipe(\n        dest('dist/img')\n    );\n}\n\n/* Watch for changes */\nexport const watchForChanges = () => {\n      watch( 'src/scss/**/*.scss', styles) ;\n      watch( 'src/images/**/*.{jpg,jpeg,png,svg,gif}', images );\n      watch( ['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], copy );\n}\n\n/* Copy files */\nexport const copy = () => {\n    return src( ['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'] )\n    .pipe(\n        dest('dist')\n    );\n}\n\n/* Delete files */\nexport const clean = () => del(['dist']);\n\n/* Build dev */\nexport const dev = series( clean, parallel( styles, images, copy ), watchForChanges )\n\n/* Build prod */\nexport const build = series( clean, parallel( styles, images, copy ) )\n\n/* Define default */\nexport default dev;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567535319679
  }
}